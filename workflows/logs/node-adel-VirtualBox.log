[INFO ] 2019-12-19T05:18:46,470Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/generated-custom-cordapps/20191219-051842.393/custom-cordapp_1_4_0abff280-718c-4b2a-bbb2-41b10d7dad8e.jar, rootPackageName=null) {}
[INFO ] 2019-12-19T05:18:46,830Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/generated-custom-cordapps/20191219-051842.393/custom-cordapp_1_4_0abff280-718c-4b2a-bbb2-41b10d7dad8e.jar {}
[INFO ] 2019-12-19T05:18:57,132Z [Test worker] internal.TestCordappImpl.apply - Generating CorDapp jar from local project in /home/adel/corda/articles/web3j-iou (copy)/workflows ... {}
[INFO ] 2019-12-19T05:18:57,995Z [Connection worker] internal.TestCordappImpl.statusChanged - Build {}
[INFO ] 2019-12-19T05:19:02,779Z [Connection worker] internal.TestCordappImpl.statusChanged - Connecting to Gradle Daemon {}
[INFO ] 2019-12-19T05:19:02,865Z [Connection worker] internal.TestCordappImpl.statusChanged - Build {}
[INFO ] 2019-12-19T05:19:03,045Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,046Z [Connection worker] internal.TestCordappImpl.statusChanged - Evaluate settings {}
[INFO ] 2019-12-19T05:19:03,046Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,046Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure build {}
[INFO ] 2019-12-19T05:19:03,047Z [Connection worker] internal.TestCordappImpl.statusChanged - Load projects {}
[INFO ] 2019-12-19T05:19:03,047Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure build {}
[INFO ] 2019-12-19T05:19:03,047Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project : {}
[INFO ] 2019-12-19T05:19:03,089Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :classpath {}
[INFO ] 2019-12-19T05:19:03,152Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project : {}
[INFO ] 2019-12-19T05:19:03,152Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :classpath {}
[INFO ] 2019-12-19T05:19:03,254Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project : {}
[INFO ] 2019-12-19T05:19:03,254Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :classpath {}
[INFO ] 2019-12-19T05:19:03,255Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project : {}
[INFO ] 2019-12-19T05:19:03,535Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure build {}
[INFO ] 2019-12-19T05:19:03,536Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project :clients {}
[INFO ] 2019-12-19T05:19:03,542Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure build {}
[INFO ] 2019-12-19T05:19:03,542Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project :contracts {}
[INFO ] 2019-12-19T05:19:03,543Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure build {}
[INFO ] 2019-12-19T05:19:03,543Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure project :workflows {}
[INFO ] 2019-12-19T05:19:03,578Z [Connection worker] internal.TestCordappImpl.statusChanged - Configure build {}
[INFO ] 2019-12-19T05:19:03,590Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,598Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2019-12-19T05:19:03,598Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,599Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2019-12-19T05:19:03,599Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,610Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2019-12-19T05:19:03,617Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,617Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2019-12-19T05:19:03,617Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:03,618Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,671Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,671Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2019-12-19T05:19:03,671Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,682Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2019-12-19T05:19:03,690Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,690Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2019-12-19T05:19:03,691Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,691Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2019-12-19T05:19:03,702Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,702Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:compileClasspath {}
[INFO ] 2019-12-19T05:19:03,710Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,710Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:compileClasspath {}
[INFO ] 2019-12-19T05:19:03,710Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,735Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2019-12-19T05:19:03,735Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,735Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,742Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:compileJava {}
[INFO ] 2019-12-19T05:19:03,774Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,775Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:processResources {}
[INFO ] 2019-12-19T05:19:03,786Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,786Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:classes {}
[INFO ] 2019-12-19T05:19:03,787Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,787Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,787Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :contracts:runtime {}
[INFO ] 2019-12-19T05:19:03,787Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,788Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :contracts:runtime {}
[INFO ] 2019-12-19T05:19:03,788Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,797Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,798Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2019-12-19T05:19:03,810Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,810Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :contracts:jar {}
[INFO ] 2019-12-19T05:19:03,811Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,811Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,811Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2019-12-19T05:19:03,811Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,828Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2019-12-19T05:19:03,828Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,829Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2019-12-19T05:19:03,829Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,829Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2019-12-19T05:19:03,841Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,841Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:compileClasspath {}
[INFO ] 2019-12-19T05:19:03,841Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,842Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:compileClasspath {}
[INFO ] 2019-12-19T05:19:03,842Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,854Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2019-12-19T05:19:03,854Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileKotlin {}
[INFO ] 2019-12-19T05:19:03,854Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,855Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:compileJava {}
[INFO ] 2019-12-19T05:19:03,874Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,875Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:processResources {}
[INFO ] 2019-12-19T05:19:03,892Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,895Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:classes {}
[INFO ] 2019-12-19T05:19:03,895Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,902Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,903Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve dependencies of :workflows:runtime {}
[INFO ] 2019-12-19T05:19:03,960Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,960Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:runtime {}
[INFO ] 2019-12-19T05:19:03,961Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,961Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:runtime {}
[INFO ] 2019-12-19T05:19:03,961Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,962Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:runtime {}
[INFO ] 2019-12-19T05:19:03,962Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,962Z [Connection worker] internal.TestCordappImpl.statusChanged - Resolve files of :workflows:runtime {}
[INFO ] 2019-12-19T05:19:03,962Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:configureCordappFatJar {}
[INFO ] 2019-12-19T05:19:03,963Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,963Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2019-12-19T05:19:03,982Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:03,983Z [Connection worker] internal.TestCordappImpl.statusChanged - Task :workflows:jar {}
[INFO ] 2019-12-19T05:19:04,010Z [Connection worker] internal.TestCordappImpl.statusChanged - Run tasks {}
[INFO ] 2019-12-19T05:19:04,011Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:04,011Z [Connection worker] internal.TestCordappImpl.statusChanged - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2019-12-19T05:19:04,011Z [Connection worker] internal.TestCordappImpl.statusChanged - Run build {}
[INFO ] 2019-12-19T05:19:04,030Z [Connection worker] internal.TestCordappImpl.statusChanged - Build {}
[INFO ] 2019-12-19T05:19:04,043Z [Connection worker] internal.TestCordappImpl.statusChanged - Deleting unused version-specific caches in /home/adel/corda/articles/web3j-iou (copy)/.gradle {}
[INFO ] 2019-12-19T05:19:04,043Z [Connection worker] internal.TestCordappImpl.statusChanged - Build {}
[INFO ] 2019-12-19T05:19:04,126Z [Connection worker] internal.TestCordappImpl.statusChanged -  {}
[INFO ] 2019-12-19T05:19:04,853Z [Test worker] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20191219-051851.140/nodes/0/cordapps] {}
[INFO ] 2019-12-19T05:19:04,860Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/0/cordapps/workflows-0.1-SNAPSHOT.jar, rootPackageName=null), RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/0/cordapps/contracts-0.1-SNAPSHOT.jar, rootPackageName=null) {}
[INFO ] 2019-12-19T05:19:04,874Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/0/cordapps/workflows-0.1-SNAPSHOT.jar {}
[INFO ] 2019-12-19T05:19:04,922Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/0/cordapps/contracts-0.1-SNAPSHOT.jar {}
[WARN ] 2019-12-19T05:19:04,953Z [Test worker] cordapp.CordappResolver.warnOnce - More than one CorDapp registered for contract com.example.contract.IOUContract. {}
[INFO ] 2019-12-19T05:19:06,786Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-12-19T05:19:06,936Z [Test worker] internal.NodeFlowManager.registerInitiatedFlow - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2019-12-19T05:19:07,408Z [Test worker] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-12-19T05:18:51.121Z
      epoch=1
  } {}
[INFO ] 2019-12-19T05:19:20,220Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-12-19T05:19:20,236Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20191219-051851.140/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-12-19T05:19:20,236Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-12-19T05:19:20,239Z [Test worker] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-12-19T05:19:20,327Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:20,337Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:25,003Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:26,444Z [Test worker] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-12-19T05:19:26,696Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-12-19T05:19:26,746Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-12-19T05:19:26,752Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-12-19T05:19:28,121Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-12-19T05:19:28,170Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-12-19T05:19:28,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:28,188Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:28,745Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:28,894Z [Test worker] network.NetworkMapUpdater.apply - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-12-19T05:19:28,942Z [MockNode-1-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:29,009Z [MockNode-1-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:29,059Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment: id=D50829081E8935F1F92DFDC1A9A6F06C4615726BC3EDBBFB8403B865839C0455 uploader=app filename=null {}
[INFO ] 2019-12-19T05:19:29,067Z [Test worker] utilities.NotaryLoader.loadService - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-12-19T05:19:29,072Z [Test worker] notary.SinglePartyNotaryService.<init> - Starting notary in validating mode {}
[INFO ] 2019-12-19T05:19:29,801Z [Test worker] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:29,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:29,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:29,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:29,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:29,891Z [Test worker] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20191219-051851.140/nodes/1/cordapps] {}
[INFO ] 2019-12-19T05:19:29,892Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/1/cordapps/workflows-0.1-SNAPSHOT.jar, rootPackageName=null), RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/1/cordapps/contracts-0.1-SNAPSHOT.jar, rootPackageName=null) {}
[INFO ] 2019-12-19T05:19:29,892Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/1/cordapps/workflows-0.1-SNAPSHOT.jar {}
[INFO ] 2019-12-19T05:19:29,952Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/1/cordapps/contracts-0.1-SNAPSHOT.jar {}
[INFO ] 2019-12-19T05:19:30,002Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-12-19T05:19:30,132Z [Test worker] internal.NodeFlowManager.registerInitiatedFlow - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2019-12-19T05:19:30,145Z [Test worker] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-12-19T05:18:51.121Z
      epoch=1
  } {}
[INFO ] 2019-12-19T05:19:31,204Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-12-19T05:19:31,211Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20191219-051851.140/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-12-19T05:19:31,211Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-12-19T05:19:31,213Z [Test worker] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-12-19T05:19:31,217Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:31,217Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:31,432Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:31,456Z [Test worker] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-12-19T05:19:31,460Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-12-19T05:19:31,461Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-12-19T05:19:31,495Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:31,495Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:31,748Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:31,756Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-12-19T05:19:31,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,761Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:31,776Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,789Z [Test worker] network.NetworkMapUpdater.apply - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-12-19T05:19:31,798Z [MockNode-2-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,809Z [MockNode-2-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:31,857Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment: id=D50829081E8935F1F92DFDC1A9A6F06C4615726BC3EDBBFB8403B865839C0455 uploader=app filename=null {}
[INFO ] 2019-12-19T05:19:31,874Z [Test worker] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:31,883Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:31,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,902Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:31,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:31,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:31,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:31,924Z [Test worker] cordapp.JarScanningCordappLoader.fromDirectories - Looking for CorDapps in [build/mock-network/20191219-051851.140/nodes/2/cordapps] {}
[INFO ] 2019-12-19T05:19:31,924Z [Test worker] cordapp.JarScanningCordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/2/cordapps/workflows-0.1-SNAPSHOT.jar, rootPackageName=null), RestrictedURL(url=file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/2/cordapps/contracts-0.1-SNAPSHOT.jar, rootPackageName=null) {}
[INFO ] 2019-12-19T05:19:31,925Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/2/cordapps/workflows-0.1-SNAPSHOT.jar {}
[INFO ] 2019-12-19T05:19:31,946Z [Test worker] cordapp.JarScanningCordappLoader.scanCordapp - Scanning CorDapp in file:/home/adel/corda/articles/web3j-iou%20(copy)/workflows/build/mock-network/20191219-051851.140/nodes/2/cordapps/contracts-0.1-SNAPSHOT.jar {}
[INFO ] 2019-12-19T05:19:31,977Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[INFO ] 2019-12-19T05:19:32,022Z [Test worker] internal.NodeFlowManager.registerInitiatedFlow - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2019-12-19T05:19:32,029Z [Test worker] internal.InternalMockNetwork$MockNode.start - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-12-19T05:18:51.121Z
      epoch=1
  } {}
[INFO ] 2019-12-19T05:19:32,715Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Start executing... {}
[INFO ] 2019-12-19T05:19:32,720Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20191219-051851.140/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-12-19T05:19:32,720Z [Test worker] persistence.AttachmentVersionNumberMigration.execute - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-12-19T05:19:32,722Z [Test worker] migration.VaultStateMigration.execute - Migrating vault state data to V4 tables {}
[INFO ] 2019-12-19T05:19:32,726Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:32,727Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:32,902Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:32,921Z [Test worker] migration.VaultStateMigration.execute - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-12-19T05:19:32,926Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-12-19T05:19:32,927Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-12-19T05:19:32,957Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:32,958Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:33,258Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2019-12-19T05:19:33,266Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-12-19T05:19:33,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,270Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:33,295Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,311Z [Test worker] network.NetworkMapUpdater.apply - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-12-19T05:19:33,320Z [MockNode-3-2] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,335Z [MockNode-3-2] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:33,379Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment: id=D50829081E8935F1F92DFDC1A9A6F06C4615726BC3EDBBFB8403B865839C0455 uploader=app filename=null {}
[INFO ] 2019-12-19T05:19:33,395Z [Test worker] statemachine.SingleThreadedStateMachineManager.invoke - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1576732768170) {}
[INFO ] 2019-12-19T05:19:33,403Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:33,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,422Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:33,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1576732771756) {}
[INFO ] 2019-12-19T05:19:33,444Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:33,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,468Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-12-19T05:19:33,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-12-19T05:19:33,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1576732773266) {}
[INFO ] 2019-12-19T05:19:33,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-12-19T05:19:33,489Z [Test worker] internal.NodeFlowManager.registerInitiatedFlowFactory - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2019-12-19T05:19:33,489Z [Test worker] internal.NodeFlowManager.registerInitiatedFlow - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2019-12-19T05:19:33,495Z [Test worker] internal.NodeFlowManager.registerInitiatedFlowFactory - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2019-12-19T05:19:33,495Z [Test worker] internal.NodeFlowManager.registerInitiatedFlow - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
